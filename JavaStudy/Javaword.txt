■ 開発
・ウォーターフォール開発：システム要件を段階的に設計し、順序をまもって中長期的にシステムを開発
する方式
・アジャイル開発：2-3週間程度のイテレーションを繰り返しながら少しずつシステムを成長させていく手法
・マイグレーション：データやプログラムの移行・移動
・デグレーション：プログラムにおいて、直したはずのバグ（プログラムのおかしいところ）が復活していたり、
前はなかったはずのバグがあったり、実装したはずの機能がなくなっている状態のこと
・デプロイ：作ったプログラムをしかるべき場所に置いたり、あれやこれやの設定をしたりして、使える状態にすること
・コンフリクト：複数のプログラムが同じデータやファイルを同じタイミングで使おうとしている状態
・環境：何かをするための場。コンピュータとか、中身のソフトウェアとか、回線とか、その他の機材とか、必要な設定とか、
あれやこれやの諸々をひとまとめにして呼んだもの
・開発環境（ローカル）：開発する時の場所
・検証環境（ステージング）：疑似本番環境。開発したプログラムが要件通りに動くかを検証
・本番環境：実際のサービスを動かす環境
設計書／仕様書
・要件定義：新たな業務の流れや、システムが備えるべき機能を定義する
・基本設計書：ソフトウェアの動きを外から見た際にどういう動きをするのか？(What)を決めたもの。業務フロー、機能一覧表、
ネットワーク構成図、テーブル定義、ERD、画面レイアウト、帳票レイアウト等がアウトプット
・詳細設計書：基本設計で決められた動きをどうやって実現するか？(How)を決めたもの。機能設計書、
データベースの物理設計書等がアウトプット
・テスト：開発したプログラムが要件通りに動くかをチェックする工程
・単体テスト（UT）：個々のプログラムを１つずつ別々に動作検証するテスト
・結合テスト（CT／IT）：複数のプログラムをまとめた、機能単位での動作を検証するテスト
・総合テスト（ST）：全ての機能を組み合わせた、システムでの動作を検証するテスト
・エビデンス／証跡：テストに使ったデータ、プログラムを動かした結果の画面（ハードコピー）、プログラムを動かしたときの記録（ログ）
等のテストを実行した証拠となるもの
・データパッチ：一定量のデータを集め、一括処理するための処理方法
・Access：Microsoft社が開発し提供しているデータベース管理ソフト
・マクロ：エクセル上での作業を記録し、自動的に実行してくれる機能
・VBA：Visual Basic for Applicationsの略でExcelやAccess等で利用できるプログラミング言語
・GAS（Google Apps Script）：JavaScriptというWebブラウザ上で動作するプログラミング言語をベースに作成されており、
Gmail やGoogle ドキュメントなど、GSuiteのサービスどうしの連携や自動化を可能にする言語
・API：Application Programming Interface。ソフトウェアやアプリケーションなどの一部を外部に向けて公開することにより、第三者が開発したソフトウェアと
機能を共有できるようにしてくれるもの
・WEB API：Web上に公開されていて、外部から呼び出して利用が可能なAPI
・REST API：Webシステムを外部から利用するためのプログラムの呼び出し規約(API)の種類の一つで、RESTと呼ばれる設計原則に従って策定されたもの
・SOAP：異なるコンピュータ上で動作するプログラム同士がネットワークを通じてメッセージを伝え合い、連携して動作するための通信プロトコル（規約）の一つ
・Ajax：JavaScriptとXMLを使って非同期にサーバとの間の通信を行うこと
・XML：文書やデータの意味や構造を記述するためのマークアップ言語の一つ
・JSON：JavaScript Object Notationの略で、XMLなどと同様のテキストベースのデータフォーマット。
XMLと比べると簡潔に構造化されたデータを記述することができるため、記述が容易で人間が理解しやすい
データフォーマットと言える
・ステータスコード：Webサーバーからのレスポンスの結果を表す、3桁の数字コード。
・クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）：404(Not Found)等
・バリデーション：入力内容や記述内容が要件を満たしているか、妥当性を確認すること
・データ連携：異なるアプリケーションやシステムをまたいでデータを共有、活用するために、それぞれの言葉や解釈の垣根を取り払うプロセス
・Daemon：UNIX系のOS（LinuxとかMacとか）における常駐プログラムの呼び名
・CRON：指示した時間に指定したプログラムを動かしてくれるやつ
・バッチ：一定量のデータを集め、一括処理するための処理方法
・ログ：コンピュータの利用状況やデータ通信など履歴や情報の記録を取る事、またその記録
・CSV：Comma Separated Valueの略で、データをカンマ(" , ")区切った値の事です。 アプリケーション間で
データをやり取りする際に使われる
・TSV：文字や文字列の間にタブ記号を挿入して区切りを設けること、あるいは、そのようにして各データを区切って管理するファイル形式のことである。 
TSVは、表計算やデータベースのデータをテキストファイルで保存する場合などに利用される
・プルリクエスト（マージリクエスト）：コードの変更をレビュワーに通知し、マージを依頼する機能
■ チケット管理ツール
・asana：Facebookの共同創業者のダスティン・モスコヴィッツと元Googleエンジニアのジャスティン・ローゼンシュタインが立ち上げたタスク管理ツール。
白と黒を基調とした見やすいUIが特徴的。チュートリアルが充実しており、ITツールを使い慣れていない人にも親切
・Backlog：タスクをただ管理するだけでなく、グラフ化して分析するための材料を用意
・Jooto：2014年にシンガポール在住の日本人が立ち上げたクラウド型のタスク管理ツール。
ひと目見るだけで、いつもメンバー全員がプロジェクトの状況が分かることを目指して設計されている
・Readmine：チケットという機能を用いてプロジェクト管理ができるオープンソースソフトウェア
・Trello：タスクを書いたカードを進捗状況に応じて動かしながらタスク管理ができるツール。
ITツールを使い慣れていない人でも簡単に使えるようシンプルな作りになっている
■ バージョン管理
・集中型：ひとつのリポジトリに接続してみんなで使うタイプ
・分散型：自、個人のパソコン上にリポジトリを持ち、好きなタイミングで好きなリポジトリに同期するタイプ
・Github：
・Backlog：タスクをただ管理するだけでなく、グラフ化して分析するための材料を用意
・SourceTree：Gitの操作ができる無料のデスクトップアプリケーションです。WindowsとmacOSのどちらでも使用でき日本語に対応
・Tortoise SVN：クライアント/サーバ型の集中型バージョン管理システム。TortoiseSVN はサーバ（Subversion）
に対するクライアント
・Git Flow：Vincent Driessen氏がブログに書いた"A successful Git branching model" というブランチモデルの導入を簡単にする git プラグイン
・master：プロダクトとしてリリースするためのブランチ
・release：プロダクトリリースの準備。 機能の追加やマイナーなバグフィックスとは独立させることで、 リリース時に含めるコードを綺麗な状態に保つ
（機能追加中で未使用のコードなどを含まないようにする）ことができる
・develop：開発ブランチ。コードが安定し、リリース準備ができたら masterへマージ
・feature：機能の追加。develop から分岐し、develop にマージする
■ FW／ライブラリ
・FW：Webアプリケーションやシステムを開発するのに必要な機能が予め用意された骨組み
・Spring Framework：Javaの開発環境で使用できるオープンソースのフレームワーク
・Struts：Java Servlet APIを拡張してMVC (Model、View、Controller)アーキテクチャを採用した、オープン・ソースのフレームワーク
・JSF（Java Server Faces）：JavaベースのWebアプリケーションフレームワーク。Javaの拡張機能セットであるJava Platform, Enterprise Edition (Java EE) 
の仕様の一つに採用されている
・ライブラリ：汎用性の高い複数のプログラムを再利用可能な形でひとまとまりにしたもの
・Bootstrap：スマートフォンなどのモバイル端末にも対応し、レスポンシブデザインを採用した HTML, CSS, JavaScript フレームワーク
・Flyway：JVM上で動作するデータベースのマイグレーションツール
・Jackson： Java 用の JSON パーサーライブラリの1つ。 Java オブジェクトと JSON の相互変換とかができる
・jQuery：JavaScriptでできることを、より簡単な記法で実現できように設計されたJavaScriptライブラリ
・Junit：Javaで開発されたプログラムにおいてユニットテスト（単体テスト）の自動化を行うためのフレームワーク
・Log4j：Javaのロギングユーティリティ
・Lombok：アノテーションを付けるだけで、 getter, setter, toString, equals などの「何度も繰り返し書くコード」を
コンパイル時に自動生成してくれるようになる
・ORM：データベースとオブジェクト指向プログラミング言語の間の非互換なデータを変換するプログラミング技法
■ 連絡ツール
・ChatWork： ビジネスコミュニケーションに特化したチャットツール
・Slack：アメリカのSlack Technology社が開発し運営しているSaaS型のビジネスチャットツール
・IP Messenger：プロトコルにTCP/IPを利用するメッセンジャーソフト
■ Java
・Javadoc：サン・マイクロシステムズが開発したコンピュータソフトで、JavaのソースコードからHTML形式のAPI仕様書を生成するもの
・アノテーション：特定のデータに対して情報タグ（メタデータ）を付加する
・メモリ管理：ログラム（プロセスなど）の要求に応じてメモリの一部を割り当てる方法と、そのメモリが不要となったときに再利用のために解放する方法を提供
・ヒープ：子要素は親要素より常に大きいか等しい（または常に小さいか等しい）」という制約を持つ木構造の事
・GC：不要になったメモリを解放するための仕組み
・GoF：オブジェクト指向における再利用のためのデザインパターン
・デザインパターン：よく出会う問題とそのスマートな解決策
■ その他
・オブジェクト指向：「モノ」を組み立てるように表現して、コンピュータに動作をさせる
・バッチ処理：コンピュータでひとまとまりのデータを一括して処理する方式
・コンパイル：プログラミング言語で書かれた文字列（ソースコード）を、コンピュータ上で実行可能な形式（オブジェクトコード）
に変換するする処理
・カバレッジ：所定の網羅条件がテストによってどれだけ実行されたかを割合で表したもの
・プラットホーム：土台となる環境