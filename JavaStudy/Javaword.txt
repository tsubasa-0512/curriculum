■ 開発
・ウォーターフォール開発：システム要件を段階的に設計し、順序をまもって中長期的にシステムを開発
する方式
・アジャイル開発：2-3週間程度のイテレーションを繰り返しながら少しずつシステムを成長させていく手法
・マイグレーション：データやプログラムの移行・移動
・デグレーション：プログラムにおいて、直したはずのバグ（プログラムのおかしいところ）が復活していたり、
前はなかったはずのバグがあったり、実装したはずの機能がなくなっている状態のこと
・デプロイ：作ったプログラムをしかるべき場所に置いたり、あれやこれやの設定をしたりして、使える状態にすること
・コンフリクト：複数のプログラムが同じデータやファイルを同じタイミングで使おうとしている状態
・環境：何かをするための場。コンピュータとか、中身のソフトウェアとか、回線とか、その他の機材とか、必要な設定とか、
あれやこれやの諸々をひとまとめにして呼んだもの
・開発環境（ローカル）：開発する時の場所
・検証環境（ステージング）：疑似本番環境。開発したプログラムが要件通りに動くかを検証
・本番環境：実際のサービスを動かす環境
設計書／仕様書
・要件定義：新たな業務の流れや、システムが備えるべき機能を定義する
基本設計書
詳細設計書
テスト
単体テスト（UT）
結合テスト（CT／IT）
総合テスト（ST）
エビデンス／証跡
データパッチ
Access
マクロ
VBA
GAS（Google Apps Script）
API
WEB API
REST API
SOAP
Ajax
XML
JSON
ステータスコード
クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）
バリデーション
データ連携
Daemon
CRON
バッチ
ログ
CSV
TSV
プルリクエスト（マージリクエスト）
■ チケット管理ツール
asana
Backlog
Jooto
Readmine
Trello
■ バージョン管理
集中型
分散型
Github
Backlog
SourceTree
Tortoise SVN
Git Flow
master
release
develop
feature
■ FW／ライブラリ
FW
Spring Framework
Struts
JSF（Java Server Faces）
ライブラリ
Bootstrap
Flyway
Jackson
jQuery
Junit
Log4j
Lombok
ORM
■ 連絡ツール
ChatWork
Slack
IP Messenger
■ Java
Javadoc
アノテーション
メモリ管理
ヒープ
GC
GoF
デザインパターン
■ その他
オブジェクト指向
バッチ処理
コンパイル
カバレッジ
プラットホーム